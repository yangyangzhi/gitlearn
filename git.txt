==========================================
			    git 命令
==========================================


1、配置

	Ⅰ、/etc/gitconfig 文件: 包含系统上每一个用户及他们仓库的通用配置。 如果使用带有 --system 选项的 git config 时，它会从此文件读写配置变量。

	Ⅱ、~/.gitconfig 或 ~/.config/git/config 文件：只针对当前用户。 可以传递 --global 选项让 Git 读写此文件。

	Ⅲ、当前使用仓库的 Git 目录中的 config 文件（就是 .git/config）：针对该仓库
	
每一个级别覆盖上一级别的配置，所以 .git/config 的配置变量会覆盖 /etc/gitconfig 中的配置变量	

环境变量
	git config --global user.name "John Doe"
	git config --global user.email johndoe@example.com
	
2、常用命令
	
	帮助
	git help config
	
	在现有目录中初始化仓库
	git init
	
	克隆现有的仓库
	git clone https://github.com/libgit2/libgit2
	
	检查当前文件状态，查看已暂存和未暂存的修改
	git status -s， git diff  --cached 或者 --staged 选项都是比较缓存中的与仓库中的文件
	
	暂存已修改文件, 跟踪新文件
	git add
	
	忽略文件， 在当前仓库的目录下新建.gitignore文件，写入配置
	
	提交更新
	git commite -m "说明", -a 选项，跳过暂存区
	
	移除文件
	git rm  移除之前已经放到缓存区，则需要使用 -f 选项， --cached 选项则是从版本控制中移除，但并不删除文件
	
	移动文件和重命名
	git mv 
	 
	查看提交历史
	git log  选项 -p 是用来显示更改内容  -n n为数字，用于描述显示几条历史
	
	撤消操作
	git commit --amend 这个命令会将暂存区中的文件提交。 如果自上次提交以来你还未做任何修改（例如，在上次提交后马
	上执行了此命令），那么快照会保持不变，而你所修改的只是提交信息，相当于重新提交。
	
	取消暂存的文件
	git reset HEAD
	
	撤消对文件的修改
	git checkout --
	
	查看远程仓库
	git remote -v   git remote show origin
	
	添加远程仓库
	git remote add <shortname> <url>
	
	从远程仓库中抓取与拉取
	git fetch [remote-name]  git pull 
	
	推送到远程仓库
	git push origin master
	
	远程仓库的移除与重命名
	git remote rename pb paul
	git remote rm
	
	创建标签
	Git 使用两种主要类型的标签：轻量标签（lightweight）与附注标签（annotated） 一个轻量标签很像一个不会改变的分支 - 它只是一个特定提交的引用
	附注标签
	git tag -a v1.4 -m 'my version 1.4'
	
	